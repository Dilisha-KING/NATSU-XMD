const { cmd } = require('../command');
const axios = require("axios");

const GEMINI_KEY = "AIzaSyATam-2wKcvX68h-1KBBppEqhy4Iz3QhdQ"; // <-- ‡∂î‡∂∫‡∑è‡∂ú‡∑ö Key

cmd({
    pattern: "ai",
    alias: ["gpt", "gemini"],
    desc: "Chat with AI",
    category: "ai",
    react: "ü§ñ",
    filename: __filename
},
async (conn, mek, m, { from, q, reply }) => {
    try {
        if (!q) return reply("‚ùå ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∑Ñ‡∑ù ‡∂Ö‡∂Ø‡∑Ñ‡∑É‡∂ö‡∑ä ‡∂Ø‡∑è‡∂±‡∑ä‡∂±...\n\n‡∂ã‡∂Ø‡∑è: .ai ‡∂∏‡∂ß Joke ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±");

        // Gemini API request
        let url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_KEY}`;
        let { data } = await axios.post(url, {
            contents: [{ parts: [{ text: q }] }]
        }, {
            headers: { "Content-Type": "application/json" }
        });

        let aiReply = data?.candidates?.[0]?.content?.parts?.[0]?.text || "‚ö†Ô∏è ‡∂∏‡∂ß reply ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ú‡∂±‡∑ä‡∂± ‡∂∂‡∑ê‡∂ª‡∑í ‡∂ã‡∂±‡∑è.";
        reply(`ü§ñ AI:\n${aiReply}`);

    } catch (e) {
        console.error(e);
        reply("‚ö†Ô∏è Error: " + e.message);
    }
});
